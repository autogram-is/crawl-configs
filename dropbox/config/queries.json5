{
  queries: {
    dropbox_sites: {
      document: 'resource',
      metadata: { category: 'dropbox', description: 'Builds a rough approximation of sites' },
      collection: 'resources',
      subqueries: [
        { collection: 'responds_with', document: 'request' },
        { collection: 'unique_urls', document: 'url' },
      ],
      filters: [
        { document: 'request', path: '_to', join: 'resource._id' },
        { document: 'request', path: '_from', join: 'url._id' },
        { document: 'resource', path: 'code', eq: 200 },
        { document: 'resource', path: 'parsed.publicSuffix', eq: 'org' },
      ],
      count: 'total',
      aggregates: [
        { path: 'r.parsed.hostname', name: 'host', function: 'collect' },
        { path: 'r.mime', name: 'mime', function: 'collect' },
        { path: 'r.parsed.subdomain', name: 'subdomain', function: 'collect' },
        { path: 'r.parsed.domainWithoutSuffix', name: 'property', function: 'collect' },
        { path: 'r.parsed.publicSuffix', name: 'tld', function: 'collect' },
      ],
      return: [
        { name: 'host', path: 'parsed.hostname' },
        { name: 'subdomain', path: 'parsed.subdomain' },
        { name: 'property', path: 'parsed.domainWithoutSuffix' },
        { name: 'tld', path: 'parsed.publicSuffix' },
      ]
    },

    dropbox_summary: {
      document: 'resource',
      metadata: { category: 'dropbox', description: 'Overview of crawled sites' },
      collection: 'resources',
      filters: [
        { path: 'code', eq: 200 },
      ],
      aggregates: [
        { path: 'parsed.hostname', name: 'Site', function: 'collect' },
      ],
      count: 'total',
      sorts: [{ path: 'total', direction: 'desc' }],
    },

    dropbox_pages: {
      document: "resource",
      metadata: { category: "dropbox", description: "Successfully crawled pages" },
      collection: "resources",
      subqueries: [{
        name: "inlinks",
        function: "unique",
        query: {
          collection: "responds_with",
          document: "rw",
          filters: [{ path: "_to", join: "resource._id" }],
          subqueries: [{
            collection: "links_to",
            document: "lt",
            filters: [{ path: "_to", join: "rw._from" }],
            subqueries: [{
              collection: "resources",
              document: "source",
              filters: [{ path: "_id", join: "lt._from" }],
              inline: true
            }],
            inline: true
          }],
          "return": [{ path: "url", document: "source" }]
        }
      }, {
        name: "outlinks",
        function: "unique",
        query: {
          collection: "links_to",
          document: "lt",
          filters: [{ path: "_from", join: "resource._id" }],
          subqueries: [{
            collection: "unique_urls",
            document: "target",
            filters: [{ path: "_id", join: "lt._to" }],
            inline: true
          }],
          return: [{ path: "url", document: "target" }]
        }
      }, {
        name: "redirectedFrom",
        query: {
          collection: 'responds_with',
          document: 'rw',
          filters: [
            { path: '_to', join: 'resource._id' },
            { path: 'redirects[0]', eq: null, negate: true }
          ],
          subqueries: [
            {
              collection: 'unique_urls',
              document: 'source',
              filters: [{ path: '_id', join: 'rw._from' }],
            },
          ],
          return: [{ path: "url", document: "source" }]
        }
      }],
      count: "total",
      filters: [
        { path: "code", eq: 200},
        { path: "mime", eq: "text/html" }
      ],
      "sorts": [
        { path: "url", direction: "asc" }
      ],
      "return": [
        { name: "Property", path: "report.property" },
        { name: "Site", path: "parsed.hostname" },
        { name: "Path", path: "parsed.pathname" },
        { name: "Directory", path: "parsed.path[0]" },
        { name: "Subdirectory", path: "parsed.path[1]" },
        { name: "Params", path: "parsed.search" },

        // Content analysis
        { name: 'CMS', path: 'content.cms' },
        { name: 'Type', path: 'content.type' },
        { name: 'Title', path: 'content.title' },
        { name: 'Description', path: 'content.description' },
        { name: 'Date', path: 'content.date' },
        { name: 'Words', path: 'content.readability.words' },
        { name: 'Readability', path: 'content.readability.score' },

         // Detected data
        { name: 'Cookies', path: 'cookies', function: 'length' },
        { name: 'Technologies', path: 'tech', function: 'length' },
        { name: 'Opengraph', path: 'data.meta.og', function: 'is_object' },
        { name: 'Twitter', path: 'data.meta.twitter', function: 'is_object' },
        { name: 'Schema_Org', path: 'data.schemaOrg', function: 'is_object' },
        { name: 'Load Time', path: 'timing.duration' },

        // Inlink/outlink counts
        { document: false, name: "Inlinks", path: "inlinks", function: "length" },
        { document: false, name: "Outlinks", path: "outlinks", function: "length" },
        { document: false, name: "Inbound_Redirects", path: "redirectedFrom", function: "length" },
        { document: false, name: "Redirected_From", path: "redirectedFrom[0]" },
      ]
    },
    
    dropbox_errors: {
      document: "resource",
      metadata: { category: "dropbox", description: "Errors encountered" },
      collection: "resources",
      subqueries: [{
        name: "inlinks",
        function: "unique",
        query: {
          collection: "responds_with",
          document: "rw",
          filters: [{ path: "_to", join: "resource._id" }],
          subqueries: [{
            collection: "links_to",
            document: "lt",
            filters: [{ path: "_to", join: "rw._from" }],
            subqueries: [{
              collection: "resources",
              document: "source",
              filters: [{ path: "_id", join: "lt._from" }],
              inline: true
            }],
            inline: true
          }],
          "return": [{ path: "url", document: "source" }]
        }
      }],
      count: "total",
      filters: [
        { path: "code", eq: 200, negate: true},
      ],
      sorts: [{ path: "inlinks", function: "length", direction: "desc" }],
      return: [
        { name: "Site", path: "parsed.hostname" },
        { name: "Path", path: "parsed.pathname" },
        { name: "Params", path: "parsed.search" },
        { name: "Code", path: "code" },
        { name: "Message", path: "message" },
        { name: "Inlinks", document: false, path: "inlinks", function: "length" },
      ]
    },
    
    dropbox_media: {
      document: "resource",
      metadata: { category: "dropbox", description: "Linked media files" },
      collection: "resources",
      subqueries: [{
        name: "inlinks",
        function: "unique",
        query: {
          collection: "responds_with",
          document: "rw",
          filters: [{ path: "_to", join: "resource._id" }],
          subqueries: [{
            collection: "links_to",
            document: "lt",
            filters: [{ path: "_to", join: "rw._from" }],
            subqueries: [{
              collection: "resources",
              document: "source",
              filters: [{ path: "_id", join: "lt._from" }],
              inline: true
            }],
            inline: true
          }],
          "return": [{ path: "url", document: "source" }]
        }
      }],
      count: "total",
      filters: [
        { path: "code", eq: 200},
        { path: "mime", eq: "text/html", negate: true }
      ],
      "sorts": [
        { path: "mime", direction: "asc" },
        { path: "parsed.subdomain", direction: "asc" },
      ],
      "return": [
        { name: "Site", path: "parsed.hostname" },
        { name: "Path", path: "parsed.pathname" },
        { name: "Params", path: "parsed.search" },
        { name: "Type", path: "mime" },
        { name: "Bytes", path: "size" },
        { document: false, name: "Inlinks", path: "inlinks", function: "length" },
      ]
    },
  
    inlinks: {
      metadata: {
        category: "dropbox", description: "Links from many sources to a given page",
      },
      collection: 'resources',
      document: 'target',
      subqueries: [
        {
          collection: 'responds_with',
          document: 'rw',
          filters: [{ path: '_to', join: 'target._id' }],
          subqueries: [
            {
              collection: 'links_to',
              document: 'lt',
              filters: [{ path: '_to', join: 'rw._from' }],
              subqueries: [
                {
                  collection: 'resources',
                  document: 'source',
                  filters: [{ path: '_id', join: 'lt._from' }],
                },
              ],
            }
          ],
        },
      ],
      return: [
        { name: "Source", document: 'source', path: 'url' },
        { name: "Link Text", document: 'lt', path: 'text' },
        { name: "Region", document: 'lt', path: 'region' },
        { name: "Link ID", document: 'lt', path: '_key' },
      ]
    },
  
    outlinks: {
      metadata: {
        category: "dropbox", description: "Links from a page to many target URLs",
      },
      collection: 'resources',
      document: 'source',
      subqueries: [
        {
          collection: 'links_to',
          document: 'lt',
          filters: [{ path: '_from', join: 'source._id' }],
          subqueries: [
            {
              collection: 'unique_urls',
              document: 'target',
              filters: [{ path: '_id', join: 'lt._to' }],
            },
          ],
        }
      ],
      return: [
        { name: "Target", document: 'target', path: 'url' },
        { name: "Link Text", document: 'lt', path: 'text' },
        { name: "Region", document: 'lt', path: 'region' },
        { name: "Link ID", document: 'lt', path: '_key' },
      ]

    },
  
    invalid: {
      metadata: {
        category: "dropbox", description: "Unparsable links",
      },
      collection: 'unique_urls',
      document: 'uu',
      subqueries: [{
        name: 'inlinks',
        function: 'unique',
        query: {
          collection: 'links_to',
          document: 'lt',
          filters: [{ path: '_to', join: 'uu._id' }],
          subqueries: [{
            collection: 'resources',
            document: 'source',
            filters: [{ path: '_id', join: 'lt._from' }],
          }],
        },
        return: [{ path: 'url', document: 'source' }],
      }],
      filters: [{ path: 'parsed', function: 'is_null', eq: true }],
      return: ['url', 'inlinks']
    },

    nonweb: {
      metadata: {
        category: "dropbox", description: "Links to non-web URL",
      },
      collection: 'unique_urls',
      document: 'uu',
      subqueries: [{
        collection: 'links_to',
        document: 'lt',
        filters: [{ path: '_to', join: 'uu._id' }],
        subqueries: [{
          collection: 'resources',
          document: 'source',
          filters: [{ path: '_id', join: 'lt._from' }],
        }],
      }],
      filters: [{ path: 'parsed.protocol', in: ['https:', 'http:'], negate: true }],
      aggregates: [
        { name: 'Protocol', path: 'parsed.protocol', function: 'collect' },
        { name: 'Link', path: 'url', function: 'collect' },
        { name: 'Pages', path: 'url', document: 'source', function: 'count_unique' },
      ],
      sorts: [{ path: 'Pages', direction: 'desc' }],
    },

    variations: {
      metadata: {
        category: "dropbox", description: 'Unique inlink variations'
      },
      collection: 'unique_urls',
      document: 'uu',
      subqueries: [{
        collection: 'links_to',
        document: 'lt',
        filters: [{ path: '_to', join: 'uu._id' }]
      }],
      aggregates: [
        { name: 'url', path: 'parsed.href', function: 'collect' },
        { name: 'variations', path: 'url', document: 'lt', function: 'count_unique' },
      ],
      filters: [
        { path: 'parsed.protocol', in: ['https:', 'http:'] },
        { path: 'variations', document: false, gt: 1 }
      ],
      sorts: [{ path: 'variations', document: false, direction: 'desc' }],
      return: [
        { name: 'Variations', document: false, path: 'variations' },
      ]
    },
  },
}